import React, { useState } from 'react';
import { useForm } from 'react-hook-form';
import { Calendar, Award, Clock, Brain, Target, TrendingUp, Camera, Document, BarChart, LineChart, Line, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, MessageSquare, Users, Send, Star, Trophy, Medal } from 'lucide-react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

// Composant d'inscription
const RegistrationForm = () => {
  const { register, handleSubmit } = useForm();
  const onSubmit = (data) => {
    // Envoi des données d'inscription à l'API
    console.log(data);
  };

  return (
    <form onSubmit={handleSubmit(onSubmit)} className="max-w-md mx-auto bg-white p-6 rounded-lg shadow">
      <h2 className="text-2xl font-bold mb-4">Inscription</h2>
      <div className="mb-4">
        <label htmlFor="name" className="block font-medium mb-1">Nom</label>
        <input type="text" id="name" {...register('name')} className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-blue-500" />
      </div>
      <div className="mb-4">
        <label htmlFor="firstName" className="block font-medium mb-1">Prénom</label>
        <input type="text" id="firstName" {...register('firstName')} className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-blue-500" />
      </div>
      <div className="mb-4">
        <label htmlFor="birthDate" className="block font-medium mb-1">Date de naissance</label>
        <input type="date" id="birthDate" {...register('birthDate')} className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-blue-500" />
      </div>
      <div className="mb-4">
        <label htmlFor="email" className="block font-medium mb-1">Email</label>
        <input type="email" id="email" {...register('email')} className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-blue-500" />
      </div>
      <div className="mb-4">
        <label htmlFor="password" className="block font-medium mb-1">Mot de passe</label>
        <input type="password" id="password" {...register('password')} className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-blue-500" />
      </div>
      <div className="mb-4">
        <label htmlFor="country" className="block font-medium mb-1">Pays</label>
        <select id="country" {...register('country')} className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-blue-500">
          <option value="">Sélectionnez votre pays</option>
          <option value="france">France</option>
          <option value="canada">Canada</option>
          <option value="maroc">Maroc</option>
        </select>
      </div>
      <button type="submit" className="w-full bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600">S'inscrire</button>
    </form>
  );
};

// Composant de tableau de bord
const Dashboard = () => {
  const progressData = [
    { name: 'Lun', temps: 45, exercices: 12 },
    { name: 'Mar', temps: 30, exercices: 8 },
    { name: 'Mer', temps: 60, exercices: 15 },
    { name: 'Jeu', temps: 40, exercices: 10 },
    { name: 'Ven', temps: 50, exercices: 14 },
    { name: 'Sam', temps: 75, exercices: 20 },
    { name: 'Dim', temps: 55, exercices: 16 }
  ];

  return (
    <div className="max-w-4xl mx-auto bg-gray-50 p-4 min-h-screen">
      <div className="mb-6">
        <h1 className="text-2xl font-bold mb-2">Tableau de Bord</h1>
        <p className="text-gray-600">Vue d'ensemble de votre progression</p>
      </div>

      <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
        <Card>
          <CardContent className="p-4 flex flex-col items-center">
            <Clock className="w-8 h-8 text-blue-600 mb-2" />
            <span className="text-sm text-gray-600">Temps total</span>
            <span className="text-xl font-bold">355 min</span>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-4 flex flex-col items-center">
            <Target className="w-8 h-8 text-green-600 mb-2" />
            <span className="text-sm text-gray-600">Objectifs atteints</span>
            <span className="text-xl font-bold">8/10</span>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-4 flex flex-col items-center">
            <Brain className="w-8 h-8 text-purple-600 mb-2" />
            <span className="text-sm text-gray-600">Quiz complétés</span>
            <span className="text-xl font-bold">24</span>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-4 flex flex-col items-center">
            <Award className="w-8 h-8 text-yellow-600 mb-2" />
            <span className="text-sm text-gray-600">Niveau actuel</span>
            <span className="text-xl font-bold">15</span>
          </CardContent>
        </Card>
      </div>

      <div className="grid md:grid-cols-2 gap-6">
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <TrendingUp className="w-5 h-5" />
              Temps d'apprentissage
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="h-64">
              <ResponsiveContainer width="100%" height="100%">
                <LineChart data={progressData}>
                  <CartesianGrid strokeDasharray="3 3" />
                  <XAxis dataKey="name" />
                  <YAxis />
                  <Tooltip />
                  <Line type="monotone" dataKey="temps" stroke="#2563eb" strokeWidth={2} />
                </LineChart>
              </ResponsiveContainer>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Brain className="w-5 h-5" />
              Exercices complétés
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="h-64">
              <ResponsiveContainer width="100%" height="100%">
                <BarChart data={progressData}>
                  <CartesianGrid strokeDasharray="3 3" />
                  <XAxis dataKey="name" />
                  <YAxis />
                  <Tooltip />
                  <Bar dataKey="exercices" fill="#3b82f6" />
                </BarChart>
              </ResponsiveContainer>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

// Composant de forum et chat
const ForumAndChat = () => {
  const [activeTab, setActiveTab] = useState('forum');
  const [messages, setMessages] = useState([]);
  const [input, setInput] = useState('');

  const handleSendMessage = () => {
    if (input.trim()) {
      setMessages([...messages, { text: input, user: 'User' }]);
      setInput('');
    }
  };

  return (
    <div className="max-w-md mx-auto bg-gray-50 min-h-screen">
      <div className="flex border-b bg-white">
        <button 
          className={`flex-1 py-3 flex justify-center items-center gap-2 ${activeTab === 'forum' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-500'}`}
          onClick={() => setActiveTab('forum')}
        >
          <Users className="w-5 h-5" />
          Forum
        </button>
        <button 
          className={`flex-1 py-3 flex justify-center items-center gap-2 ${activeTab === 'chat' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-500'}`}
          onClick={() => setActiveTab('chat')}
        >
          <MessageSquare className="w-5
